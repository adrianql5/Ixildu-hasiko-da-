/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import aplicacion.Comida;
import aplicacion.FachadaAplicacion;
import aplicacion.InfoReserva;
import aplicacion.Pedido;
import aplicacion.Usuario;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author alumnogreibd
 */
public class VPedido extends javax.swing.JDialog {

    FachadaAplicacion fa;
    Usuario u;
    /**
     * Creates new form VReservas
     */
    public VPedido(java.awt.Frame parent, boolean modal, FachadaAplicacion fa, Usuario u) {
        super(parent, modal);
        this.fa=fa;
        this.u=u;
        initComponents();
        errorLabel.setVisible(false);
        precioTextField.setEditable(false);
        cantidadTextField.setText("00");
        pedirButton.setEnabled(false);
        precioTextField.setText("00.00");
        cancelarPedidoButton.setEnabled(false);
        
        ModeloTablaMenu modelo = (ModeloTablaMenu) jTable1.getModel();
        // Llamada a la fachada con los parámetros según los filtros seleccionados
        modelo.setFilas(fa.obtenerMenu());
        
        
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                validarEntrada();
                actualizarPrecioTotal(); // <--- NUEVO
            }
        });
        
        ModeloTablaPedidos modelo2 = (ModeloTablaPedidos) jTable2.getModel();
        // Llamada a la fachada con los parámetros según los filtros seleccionados
        modelo2.setFilas(fa.obtenerPedidosActivos(u));
        
        
        jTable2.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Si no hay fila seleccionada (el índice es -1), desactivar el botón
                int selectedRow = jTable2.getSelectedRow();
                cancelarPedidoButton.setEnabled(selectedRow >= 0); // Habilitar solo si hay una fila seleccionada
            }
        });


        cantidadTextField.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                validarEntrada();
                actualizarPrecioTotal(); // <--- NUEVO
            }

            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                validarEntrada();
                actualizarPrecioTotal(); // <--- NUEVO
            }

            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                validarEntrada();
                actualizarPrecioTotal(); // <--- NUEVO
            }
        });


    }
    
    private void validarEntrada() {
        String textoCantidad = cantidadTextField.getText().trim();
        boolean cantidadValida = false;
        try {
            int cantidad = Integer.parseInt(textoCantidad);
            cantidadValida = cantidad > 0;
        } catch (NumberFormatException e) {
            cantidadValida = false;
        }

        boolean comidaSeleccionada = jTable1.getSelectedRow() >= 0;
        pedirButton.setEnabled(cantidadValida && comidaSeleccionada);
        
        
    }
    
    private void actualizarPrecioTotal() {
        String textoCantidad = cantidadTextField.getText().trim();
        int filaSeleccionada = jTable1.getSelectedRow();

        if (filaSeleccionada >= 0) {
            try {
                int cantidad = Integer.parseInt(textoCantidad);
                if (cantidad > 0) {
                    ModeloTablaMenu modelo = (ModeloTablaMenu) jTable1.getModel();
                    Comida comida = modelo.obtenerComida(filaSeleccionada);
                    double precio = comida.getPrecio();
                    double total = cantidad * precio;
                    precioTextField.setText(String.format("%.2f", total));
                    return;
                }
            } catch (NumberFormatException e) {
                // Ignorado, manejará más abajo
            }
        }

        // Si algo falla, se limpia el precio
        precioTextField.setText("");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cantidadTextField = new javax.swing.JTextField();
        pedirButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        cancelarPedidoButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        precioTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new ModeloTablaMenu());
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Cantidad:");

        cantidadTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadTextFieldActionPerformed(evt);
            }
        });

        pedirButton.setText("Pedir");
        pedirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedirButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Pedidos activos:");

        jTable2.setModel(new ModeloTablaPedidos());
        jScrollPane2.setViewportView(jTable2);

        cancelarPedidoButton.setText("Cancelar Pedido");
        cancelarPedidoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPedidoButtonActionPerformed(evt);
            }
        });

        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        errorLabel.setText("No hay stock sufciente");

        jLabel3.setText("Precio:");

        precioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelarPedidoButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(salirButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(precioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cantidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pedirButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(errorLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pedirButton)
                        .addGap(18, 18, 18)
                        .addComponent(errorLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cantidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(precioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarPedidoButton)
                    .addComponent(salirButton))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cantidadTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cantidadTextFieldActionPerformed

    private void cancelarPedidoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPedidoButtonActionPerformed
        // TODO add your handling code here:
        ModeloTablaPedidos modelo = (ModeloTablaPedidos) jTable2.getModel();
    
        // Obtener el pedido seleccionado de la tabla (suponiendo que el pedido seleccionado es el primero, puede cambiar según tu lógica)
        int filaSeleccionada = jTable2.getSelectedRow();
        if (filaSeleccionada < 0) {
            errorLabel.setText("Debe seleccionar un pedido para cancelar.");
            errorLabel.setVisible(true);
            return;
        }

        Pedido pedidoSeleccionado = modelo.obtenerPedido(filaSeleccionada);

        
        fa.eliminarPedido(pedidoSeleccionado, u);

       
        errorLabel.setVisible(false);

    
        modelo.setFilas(fa.obtenerPedidosActivos(u));

     
        ModeloTablaMenu modeloMenu = (ModeloTablaMenu) jTable1.getModel();
        modeloMenu.setFilas(fa.obtenerMenu());

    }//GEN-LAST:event_cancelarPedidoButtonActionPerformed

    private void precioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioTextFieldActionPerformed

    private void pedirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedirButtonActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada < 0) return; 

        ModeloTablaMenu modelo = (ModeloTablaMenu) jTable1.getModel();
        Comida comidaSeleccionada = modelo.obtenerComida(filaSeleccionada);

        int cantidad;
        try {
            cantidad = Integer.parseInt(cantidadTextField.getText().trim());
        } catch (NumberFormatException e) {
            errorLabel.setText("Cantidad no válida.");
            errorLabel.setVisible(true);
            return;
        }

        if (!fa.pedir(u, comidaSeleccionada, cantidad)) {
            errorLabel.setText("No hay stock suficiente.");
            errorLabel.setVisible(true);
        } else {
            errorLabel.setVisible(false);
        }


        modelo.setFilas(fa.obtenerMenu());


        ModeloTablaPedidos modelo2 = (ModeloTablaPedidos) jTable2.getModel();
        modelo2.setFilas(fa.obtenerPedidosActivos(u));
    }//GEN-LAST:event_pedirButtonActionPerformed

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarPedidoButton;
    private javax.swing.JTextField cantidadTextField;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton pedirButton;
    private javax.swing.JTextField precioTextField;
    private javax.swing.JButton salirButton;
    // End of variables declaration//GEN-END:variables
}
