/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import aplicacion.FachadaAplicacion;
import aplicacion.Pelicula;
import aplicacion.Sesion;
import aplicacion.Usuario;
import aplicacion.Valoracion;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Date;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author alumnogreibd
 */
public class VValoraciones extends javax.swing.JDialog {
    Usuario u;
    FachadaAplicacion fa;

            
    /**
     * Creates new form VValoracion
     */
    public VValoraciones(java.awt.Frame parent, boolean modal, FachadaAplicacion fa, Usuario u) {
        super(parent, modal);
        this.fa=fa;
        this.u=u;
        initComponents();
        
        comboBox.removeAllItems(); 
        for (Integer i = 1; i <= 10; i++) {
            comboBox.addItem(i.toString());
        }
        
        ModeloTablaValoracionesUSR modelo = (ModeloTablaValoracionesUSR) jTable1.getModel();
        
        modelo.setFilas(fa.obtenerValoraciones(u.getIdUsuario()));

        if (modelo.getRowCount() > 0) {
            jTable1.setRowSelectionInterval(0, 0);

            Valoracion valoracionSeleccionada = modelo.obtenerValoracion(0);
            opinionTextField.setText(valoracionSeleccionada.getOpinion());

            comboBox.setSelectedItem(valoracionSeleccionada.getPuntuacion().toString());
        }
        
        DocumentListener docListener = new DocumentListener() {
            public void changedUpdate(DocumentEvent e) { checkFields(); }
            public void removeUpdate(DocumentEvent e) { checkFields(); }
            public void insertUpdate(DocumentEvent e) { checkFields(); }
        };

        opinionTextField.getDocument().addDocumentListener(docListener);
        guardarButton.setEnabled(false);
    }
    
    private void checkFields() {
        boolean allFilled = !opinionTextField.getText().isEmpty();
        guardarButton.setEnabled(allFilled);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        opinionTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        guardarButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        borrarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new ModeloTablaValoracionesUSR());
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Opinion:");

        opinionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opinionTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Puntuaci√≥n:");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        borrarButton.setText("Borrar");
        borrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(borrarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(salirButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(opinionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(guardarButton)))))))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opinionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salirButton)
                    .addComponent(borrarButton))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        // TODO add your handling code here:
        String opinion = opinionTextField.getText();
        int puntuacion = Integer.parseInt(comboBox.getSelectedItem().toString());
        ModeloTablaValoracionesUSR modelo = (ModeloTablaValoracionesUSR) jTable1.getModel();
        Valoracion valoracionSeleccionada = modelo.obtenerValoracion(0);
        
        fa.actualizarValoracion(u,valoracionSeleccionada.getPelicula(), opinion, puntuacion);
        
        modelo = (ModeloTablaValoracionesUSR) jTable1.getModel();
        
        modelo.setFilas(fa.obtenerValoraciones(u.getIdUsuario()));

        if (modelo.getRowCount() > 0) {
            jTable1.setRowSelectionInterval(0, 0);

            valoracionSeleccionada = modelo.obtenerValoracion(0);
            opinionTextField.setText(valoracionSeleccionada.getOpinion());

            comboBox.setSelectedItem(valoracionSeleccionada.getPuntuacion().toString());
        }
        
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void borrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtonActionPerformed
        // TODO add your handling code here:
        ModeloTablaValoracionesUSR modelo = (ModeloTablaValoracionesUSR) jTable1.getModel();
        Valoracion valoracionSeleccionada = modelo.obtenerValoracion(0);
        
        fa.eliminarValoracion(u,valoracionSeleccionada.getPelicula());
        
        modelo = (ModeloTablaValoracionesUSR) jTable1.getModel();
        
        modelo.setFilas(fa.obtenerValoraciones(u.getIdUsuario()));

        if (modelo.getRowCount() > 0) {
            jTable1.setRowSelectionInterval(0, 0);

            valoracionSeleccionada = modelo.obtenerValoracion(0);
            opinionTextField.setText(valoracionSeleccionada.getOpinion());

            comboBox.setSelectedItem(valoracionSeleccionada.getPuntuacion().toString());
        }
    }//GEN-LAST:event_borrarButtonActionPerformed

    private void opinionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opinionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opinionTextFieldActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrarButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField opinionTextField;
    private javax.swing.JButton salirButton;
    // End of variables declaration//GEN-END:variables
}
